//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CSharp.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICSharpListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class CSharpBaseListener : ICSharpListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.source_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSource_file([NotNull] CSharpParser.Source_fileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.source_file"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSource_file([NotNull] CSharpParser.Source_fileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.root_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRoot_expr([NotNull] CSharpParser.Root_exprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.root_expr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRoot_expr([NotNull] CSharpParser.Root_exprContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.using_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUsing_statement([NotNull] CSharpParser.Using_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.using_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUsing_statement([NotNull] CSharpParser.Using_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_declaration([NotNull] CSharpParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_declaration([NotNull] CSharpParser.Namespace_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.qualified_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQualified_identifier([NotNull] CSharpParser.Qualified_identifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.qualified_identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQualified_identifier([NotNull] CSharpParser.Qualified_identifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_body([NotNull] CSharpParser.Namespace_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_body([NotNull] CSharpParser.Namespace_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_member_declaration([NotNull] CSharpParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.namespace_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_member_declaration([NotNull] CSharpParser.Namespace_member_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration([NotNull] CSharpParser.Type_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration([NotNull] CSharpParser.Type_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_declaration([NotNull] CSharpParser.Class_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_declaration([NotNull] CSharpParser.Class_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_base([NotNull] CSharpParser.Class_baseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_base"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_base([NotNull] CSharpParser.Class_baseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_body([NotNull] CSharpParser.Class_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_body([NotNull] CSharpParser.Class_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_member_declaration([NotNull] CSharpParser.Class_member_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_member_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_member_declaration([NotNull] CSharpParser.Class_member_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_declaration([NotNull] CSharpParser.Method_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.method_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_declaration([NotNull] CSharpParser.Method_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_body([NotNull] CSharpParser.Method_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.method_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_body([NotNull] CSharpParser.Method_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] CSharpParser.BlockContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement_list([NotNull] CSharpParser.Statement_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.statement_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement_list([NotNull] CSharpParser.Statement_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CSharpParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.method_header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_header([NotNull] CSharpParser.Method_headerContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.method_header"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_header([NotNull] CSharpParser.Method_headerContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.formal_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFormal_parameter_list([NotNull] CSharpParser.Formal_parameter_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.formal_parameter_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFormal_parameter_list([NotNull] CSharpParser.Formal_parameter_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.fixed_parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_parameters([NotNull] CSharpParser.Fixed_parametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.fixed_parameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_parameters([NotNull] CSharpParser.Fixed_parametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.fixed_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixed_parameter([NotNull] CSharpParser.Fixed_parameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.fixed_parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixed_parameter([NotNull] CSharpParser.Fixed_parameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMember_name([NotNull] CSharpParser.Member_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.member_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMember_name([NotNull] CSharpParser.Member_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_type([NotNull] CSharpParser.Return_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.return_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_type([NotNull] CSharpParser.Return_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] CSharpParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.method_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_modifier([NotNull] CSharpParser.Method_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.method_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_modifier([NotNull] CSharpParser.Method_modifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CSharpParser.class_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_modifier([NotNull] CSharpParser.Class_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CSharpParser.class_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_modifier([NotNull] CSharpParser.Class_modifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
